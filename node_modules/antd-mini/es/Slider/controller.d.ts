import { ISliderProps, SliderValue } from './props';
export interface MoveStatus {
    changingStart?: boolean;
    changingEnd?: boolean;
}
export type MoveType = 'start' | 'end' | 'move';
export declare class SliderController {
    private _value;
    private _props;
    private id;
    private valueId;
    private _callback;
    private _moveStatus;
    get value(): SliderValue;
    get props(): ISliderProps;
    constructor(_value: SliderValue, _props: ISliderProps);
    handleMove(component: any, e: any, type: MoveType): void;
    private fireChange;
    isMoveStatusChanged(value1: any, value2: any): boolean;
    isSliderValueEqual(value1?: SliderValue, value2?: SliderValue): boolean;
    private getId;
    private getRect;
    fitSliderValue(value: SliderValue | undefined, min: number, max: number, isRange: boolean): SliderValue;
    private getValue;
    formatValue(val: any): SliderValue;
    getRoundedValue(value: SliderValue, step?: number): SliderValue;
    updateProps(props: ISliderProps): void;
    updateValue(value: SliderValue): void;
    updateMoveStatus(moveStatus: any): void;
    onChange(callback: any): void;
}
